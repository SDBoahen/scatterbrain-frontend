import React from 'react';
import styled from "styled-components";


class Header extends React.Component{  

    state = { 
        
        beenClicked: false

        ,
        // allDashes: this.props.allDashes
        // ,
            // amountOfThingsToDo: (this.props.allDashes.length-1),
            // pickADash: (Math.ceil(Math.random() * Math.floor(this.state.amountOfThingsToDo)))
        // ,

        cuteAndNiceThings: 
        [
            "You look so cute!",
            // "I'm so proud of you!",
            "Look at you working so hard!",
            "✨👏👏👏✨",
            // "😉✨",
            // "✨🥺✨",
            "✨I Believe In You!✨",
            "🙌So what are we tackling today?!🙌"
            ,
            // "How are things with " + this.state.allDashes[pickADash].dash_name + "?😄"
        ]
    
    }
    localClickHandler =()=> {
        this.setState({ beenClicked: !this.state.beenClicked })
    }




    niceThingsToSay=()=>{  console.log("INSTATE:  ", this.state.cuteAndNiceThings[0])   ///
        
        let options = (this.state.cuteAndNiceThings.length-1)
        let shrug = (Math.ceil(Math.random() * Math.floor(options)))
          //console.log(this.state.cuteAndNiceThings.length)   ///
          //console.log( Math.ceil(Math.random() * Math.floor(options)) )   ///


        return(  //true
                this.state.cuteAndNiceThings[shrug]  
                    // _.sample(list, [n])
                    // _.sample(this.state.cuteAndNiceThings)
        )
        // this.setState({ beenClicked: false })
        // return(<h2>WOW!</h2>)
    }
    niceThing=()=>{

        if(this.state.beenClicked === true){ return this.niceThingsToSay() }
        else{ return "Hiyah Pal!" }

    }


    // ***  ~

    sayNiceThings =()=>{  console.log("You look so cute!")   ///

        this.setState({ beenClicked: !this.state.beenClicked })        
        // this.niceThing()
        // setTimeout(() => this.localClickHandler(), 3000);

    }

    // ***  ~


    
    
    render(){ 
    return(<div>

<br/><h1><span>

            {/* <span> */}
        ✨🍃🌱🌿🌳🌿🌼🌱🍃🌱🌿🌼🌳🌿🌱🍃✨
            {/* </span> */}
            {/* ✨🍃🌱🌿🌳🌿🌼🌱🍃Hiyah Pal!🌱🌿🌼🌳🌿🌱🍃✨ */}

        <NiceTingz>{this.niceThing()}</NiceTingz>

    < Buddie>
    💛<img class="rotate"
    
           alt="swampy" 
           src={"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/258.png"} 
        
           onClick={this.sayNiceThings}
      /> 
        {/* WOW! *** */}
        {/* {this.niceThing()} */}


    </Buddie>
    ✨🌱🌿🌳🌺🌿🌱🍃🌻🌿🌳🌿🌸🌱🍃✨
    {/* <h10>Look At You Working So Hard! I'm So Proud of You❣️</h10> */}


        {/* 💛<img alt={this.props.accountaBuddy[0].buddie_name} 
            src={this.props.accountaBuddy[0].buddie_image}/> */}
        {/* ✨🍃🌱🌿🌳🌿🌱🍃Hi Pal!💛🐢🌱🌿🌳🌿🌱🍃✨ */}


</span></h1><br/>

          </div>)}  }
export default Header







const NiceTingz = styled.div`


    color: palevioletred;
    font-weight: bold;
    font-size: 100px

    text-shadow: 2px 2px 5px black;

        // font-style: ***
        // font-size: ${100}


    /* ----------------------------------------------
    * Generated by Animista on 2021-1-27 11:43:5
    * Licensed under FreeBSD License.
    * See http://animista.net/license for more info. 
    * w: http://animista.net, t: @cssanimista
    * ---------------------------------------------- */
   
   /**
    * ----------------------------------------
    * animation wobble-hor-bottom
    * ----------------------------------------
    */
        @-webkit-keyframes wobble-hor-bottom {
            0%,
            100% {
            -webkit-transform: translateX(0%);
                    transform: translateX(0%);
            -webkit-transform-origin: 50% 50%;
                    transform-origin: 50% 50%;
            }
            15% {
            -webkit-transform: translateX(-30px) rotate(-6deg);
                    transform: translateX(-30px) rotate(-6deg);
            }
            30% {
            -webkit-transform: translateX(15px) rotate(6deg);
                    transform: translateX(15px) rotate(6deg);
            }
            45% {
            -webkit-transform: translateX(-15px) rotate(-3.6deg);
                    transform: translateX(-15px) rotate(-3.6deg);
            }
            60% {
            -webkit-transform: translateX(9px) rotate(2.4deg);
                    transform: translateX(9px) rotate(2.4deg);
            }
            75% {
            -webkit-transform: translateX(-6px) rotate(-1.2deg);
                    transform: translateX(-6px) rotate(-1.2deg);
            }
        }
        @keyframes wobble-hor-bottom {
            0%,
            100% {
            -webkit-transform: translateX(0%);
                    transform: translateX(0%);
            -webkit-transform-origin: 50% 50%;
                    transform-origin: 50% 50%;
            }
            15% {
            -webkit-transform: translateX(-30px) rotate(-6deg);
                    transform: translateX(-30px) rotate(-6deg);
            }
            30% {
            -webkit-transform: translateX(15px) rotate(6deg);
                    transform: translateX(15px) rotate(6deg);
            }
            45% {
            -webkit-transform: translateX(-15px) rotate(-3.6deg);
                    transform: translateX(-15px) rotate(-3.6deg);
            }
            60% {
            -webkit-transform: translateX(9px) rotate(2.4deg);
                    transform: translateX(9px) rotate(2.4deg);
            }
            75% {
            -webkit-transform: translateX(-6px) rotate(-1.2deg);
                    transform: translateX(-6px) rotate(-1.2deg);
            }
        }
   



`;





const Buddie = styled.div`
  

    width: 10
    hieght: 10


`;